/**
 * @file
 * @ingroup <<<GROUP>>>
 * @brief   <<<BRIEF>>>
 *          <<<STATEMACHINENAME>>> State Machine Test Suite. Run this in the console to manually test your state machine.
 *
 *          This code is Autogenerated from '<<<PYIFGENNAME>>>' with the MIT License.
 *          As such, please only hand-code within 'USER' tags.
 *
 * @author  <<<AUTHOR>>>
 */
using <<<NAMESPACE>>>;
/// {{{USER_USING_DECLARATIONS}}}
/// {{{USER_USING_DECLARATIONS}}}

namespace <<<NAMESPACE>>>Test
{
    internal class Test<<<STATEMACHINENAME>>>Controller : <<<STATEMACHINENAME>>>Context
    {
        /// <summary>
        /// Test context constructor.
        /// </summary>
        internal Test<<<STATEMACHINENAME>>>Controller()
        {
            /// {{{USER_CONSTRUCTOR}}}
            /// {{{USER_CONSTRUCTOR}}}
        }
        /// <summary>
        /// Overridden guards.
        /// </summary>
        <<<PER_GUARD_BEGIN>>>
        public override bool <<<GUARDNAME>>>()
        {
            /// {{{USER_<<<GUARDNAME>>>}}}
            /// {{{USER_<<<GUARDNAME>>>}}}
            return base.<<<GUARDNAME>>>();
        }
        <<<PER_GUARD_END>>>
        /// <summary>
        /// Overridden on state entry/exit.
        /// </summary>
        <<<PER_STATE_BEGIN>>>
        public override void On<<<STATENAME>>>Entry()
        {
            base.On<<<STATENAME>>>Entry();
            /// {{{USER_<<<STATENAME>>>_on_entry}}}
            /// {{{USER_<<<STATENAME>>>_on_entry}}}
        }
        public override void On<<<STATENAME>>>Exit()
        {
            base.On<<<STATENAME>>>Exit();
            /// {{{USER_<<<STATENAME>>>_on_exit}}}
            /// {{{USER_<<<STATENAME>>>_on_exit}}}
        }
        <<<PER_STATE_END>>>
        /// <summary>
        /// Overridden actions.
        /// </summary>
        <<<PER_ACTION_SIGNATURE_BEGIN>>>
        public override void <<<ACTIONNAME>>>(ref <<<EVENTNAME>>> data)
        {
            base.<<<ACTIONNAME>>>(ref data);
            /// {{{USER_<<<ACTIONNAME>>>_<<<EVENTNAME>>>}}}
            /// {{{USER_<<<ACTIONNAME>>>_<<<EVENTNAME>>>}}}
        }
        <<<PER_ACTION_SIGNATURE_END>>>
        /// {{{USER_MEMBERS}}}
        /// {{{USER_MEMBERS}}}
    };

    /// <summary>
    /// Test Suite
    /// </summary>
    public class Suite
    {
        internal void Test<<<STATEMACHINENAME>>>States()
        {
            Test<<<STATEMACHINENAME>>>Controller context = new Test<<<STATEMACHINENAME>>>Controller();
            <<<STATEMACHINENAME>>>StateMachine sm = new <<<STATEMACHINENAME>>>StateMachine(context);
            /// {{{USER_UNIT_TEST_STATES}}}
            /// {{{USER_UNIT_TEST_STATES}}}
        }
        /// {{{USER_TESTS}}}
        /// {{{USER_TESTS}}}
        public void Run() 
        {
            Test<<<STATEMACHINENAME>>>States();
            // Don't forget to run your tests here.
            /// {{{USER_TEST_SUITE_TESTS}}}
            /// {{{USER_TEST_SUITE_TESTS}}}
        }
    };
}